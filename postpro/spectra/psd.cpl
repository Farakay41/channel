! This program computes the power spectral density 
! and cross spectral density of:
!     (uu, vv, ww, uv, vw, uw)
!
! Data is then saved to a binary file ('psd.bin');
! it is structure so that it corresponds to an array
! of double precision floating point (64 bits), whose
! indices are:
!     (i_component, i_y, i_z, i_x)
! with C-like ordering.
!
! This structure is purposely chosen, so that:
! - the first index is the component of the Reynolds
!   stress tensor; so, each component is saved as a 
!   contiguous portion of memory. This makes sense,
!   since usually one wants to access one component at
!   a time;
! - the second index corresponds to the wall normal 
!   coordinate - so, if one specifies the y, a contiguous
!   portion of memory representing the spectrum for that
!   y is found;
! - the last index corresponds to the k_x modes; this makes
!   it fast to sum up all the k_x modes to obtain the y-k_z
!   cumulative spectra, which is somewhat more common than
!   the y-k_x one.
!
! This program IS parallel



gamma=0
outinterv=0
USE ../dnsdata
USE ../dnsdirect
!USE rtchecks
USE ../convenience.cpl

! Parameters
! -----------------------------
INTEGER nfmin,nfmax,dn,factor
nfmin=atoi(COMMANDLINE(4))
nfmax=atoi(COMMANDLINE(5))
dn=atoi(COMMANDLINE(6))
!------------------------------
nftot=[(nfmax-nfmin) DIV dn]+1

! Definitions
MEANTERMS = STRUCTURE(REAL U,W)

! Array declarations
ARRAY(1..6,nyl-2..nyh+2,0..nz,0..nx) OF REAL psd=0
ARRAY(nyl-2..nyh+2) OF MEANTERMS meandata=0
POINTER TO STORED STRUCTURE[
        ARRAY(1..6,0..ny,0..nz,0..nx) OF REAL psd_image
] psd_file

! Compute the average field
WRITE "Computing average..."
LOOP FOR n=nfmin TO nfmax
  STRING field_name = WRITE('Dati.cart.'n'.out')
  IF NOT first THEN READ FROM prev
  INTEGER sz=SIZEOF(INTEGER)*3+SIZEOF(REAL)*7
  POINTER TO STORED STRUCTURE(
    ARRAY(0..sz-1) OF CHAR dummy
    ARRAY(0..2,0..nx,-nz..nz,-1..ny+1) OF COMPLEX fieldimage_fortran
  ) diskfield_fortran
  diskfield_fortran=OPEN(field_name);
  WITH diskfield_fortran,meandata(*):
    U=~+fieldimage_fortran(0,0,0,nyl-2..nyh+2).REAL
    W=~+fieldimage_fortran(2,0,0,nyl-2..nyh+2).REAL
  CLOSE diskfield_fortran
  IF NOT last THEN WRITE TO next
REPEAT 
DO WITH meandata(iy): U=U/nftot; W=W/nftot; FOR ALL iy 

! Main loop on files
LOOP files FOR n=nfmin TO nfmax
    ! Read field
    STRING field_name = WRITE('Dati.cart.'n'.out')
    read_field_fortran(field_name)
    WITH V(0,0,*),meandata(*): u=~-U; w=~-W
    ! Compute PSD and CSD
    DO
      LOOP FOR iz=0 TO nz
        LOOP FOR ix=0 TO nx
          IF ix=0 THEN
            factor=1
          ELSE
            factor=2
          END IF
          WITH V(ix,iz,iy): psd(1,iy,iz,ix)=~+factor*NORM[u]; psd(2,iy,iz,ix)=~+factor*NORM[v]; psd(3,iy,iz,ix)=~+factor*NORM[w]; psd(4,iy,iz,ix)=~+factor*[u|v].REAL; psd(5,iy,iz,ix)=~+factor*[u|w].REAL; psd(6,iy,iz,ix)=~+factor*[v|w].REAL
          IF iz#0 THEN
            WITH V(ix,-iz,iy): psd(1,iy,iz,ix)=~+factor*NORM[u]; psd(2,iy,iz,ix)=~+factor*NORM[v]; psd(3,iy,iz,ix)=~+factor*NORM[w]; psd(4,iy,iz,ix)=~+factor*[u|v].REAL; psd(5,iy,iz,ix)=~+factor*[u|w].REAL; psd(6,iy,iz,ix)=~+factor*[v|w].REAL
          END IF
        REPEAT
      REPEAT
    FOR ALL iy
REPEAT files

! Average
DO psd(ic,iy,iz,ix) = ~ / nftot FOR ALL ic,iy,iz,ix

! Create output directory
! ------------------------------------
<*
#include <sys/stat.h>
#include <sys/types.h>
int ifold_create = mkdir("spectra", 0777);
*>

! Save to binary
IF has_terminal THEN WRITE "Saving to psd.bin"
IF NOT first THEN READ FROM prev
	psd_file = OPEN('spectra/psd.bin')
    WITH psd_file: psd_image = psd
	CLOSE psd_file
IF NOT last THEN WRITE TO next

! add metadata to spectra folder
IF has_terminal THEN WRITE "Saving metadata."
IF first THEN
  FILE metadata_file
  metadata_file=OPEN("spectra/psd_metadata.txt")
  WRITE TO metadata_file "Tot. fields used for calculation of spectra: ", nftot
  WRITE TO metadata_file "nmin: ", nfmin
  WRITE TO metadata_file "nmax: ", nfmax
  WRITE TO metadata_file "dn:   ", dn
END IF
! Be polite and say goodbye
WRITE "Goodbye, man!"
